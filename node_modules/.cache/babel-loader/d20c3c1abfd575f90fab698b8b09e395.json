{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Documents/GitHub/qmsg/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // let url = \"https://sheetsu.com/apis/v1.0bu/05c2c5a08ead\";\n\nlet url = \"./data.json\";\nlet myset = new Set();\nlet data = [];\nexport default function App() {\n  const [cat, setCat] = useState([]);\n  const [selectCat, setselectCat] = useState(\"\");\n  const [selectsubcat, setselectsubcat] = useState(\"\");\n  const [subcat, setsubcat] = useState([]);\n\n  function handleselectsubcat(e) {\n    setselectsubcat(e.target.value);\n  }\n\n  function handleselectCat(e) {\n    setselectCat(e.target.value);\n    setsubcat(cat.filter(cat => cat.cat === selectCat));\n  }\n\n  useEffect(() => {\n    if (cat.length === 0) {\n      try {\n        fetch(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }).then(response => response.json()).then(json => {\n          if (json.length > 0) {\n            json.map(d => myset.add(d.cat));\n            json.map(d => data.push(d));\n          }\n        }).then(() => {\n          setCat(data);\n        }).then(() => {});\n      } catch (err) {\n        console.log(\" catched err is :\", err);\n      }\n    }\n  }, [cat]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    dir: \"rtl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, cat.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"logo.png\",\n    alt: \"logo\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    dir: \"rtl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"custom-select custom-select-lg mb-3\",\n    id: \"cate\",\n    value: selectCat,\n    onChange: handleselectCat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" Salact option\"), [...myset].map((cat, i) => /*#__PURE__*/React.createElement(\"option\", {\n    value: cat,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, cat)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 text-right\",\n    dir: \"rtl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"custom-select custom-select-lg mb-3\",\n    value: selectsubcat,\n    onChange: handleselectsubcat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \" select option\"), subcat.map((cat, i) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: cat,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, cat);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleFormControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \" \\u0646\\u0635 \\u0627\\u0644\\u062D\\u062F\\u0645\\u0629\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"exampleFormControlTextarea1\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-lg mt-2\",\n    id: \"copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"copy to clipboard\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./annimated.svg\",\n    alt: \"loading img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container loading-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" Loading ...\"))));\n}","map":{"version":3,"sources":["/Users/macpro/Documents/GitHub/qmsg/src/App.js"],"names":["React","useState","useEffect","url","myset","Set","data","App","cat","setCat","selectCat","setselectCat","selectsubcat","setselectsubcat","subcat","setsubcat","handleselectsubcat","e","target","value","handleselectCat","filter","length","fetch","headers","Accept","then","response","json","map","d","add","push","err","console","log","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// let url = \"https://sheetsu.com/apis/v1.0bu/05c2c5a08ead\";\nlet url = \"./data.json\";\nlet myset = new Set();\nlet data = [];\nexport default function App() {\n  const [cat, setCat] = useState([]);\n  const [selectCat, setselectCat] = useState(\"\");\n  const [selectsubcat, setselectsubcat] = useState(\"\");\n  const [subcat, setsubcat] = useState([]);\n\n  function handleselectsubcat(e) {\n    setselectsubcat(e.target.value);\n  }\n\n  function handleselectCat(e) {\n    setselectCat(e.target.value);\n    setsubcat(cat.filter((cat) => cat.cat === selectCat));\n  }\n  useEffect(() => {\n    if (cat.length === 0) {\n      try {\n        fetch(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        })\n          .then((response) => response.json())\n          .then((json) => {\n            if (json.length > 0) {\n              json.map((d) => myset.add(d.cat));\n              json.map((d) => data.push(d));\n            }\n          })\n          .then(() => {\n            setCat(data);\n          })\n          .then(() => {});\n      } catch (err) {\n        console.log(\" catched err is :\", err);\n      }\n    }\n  }, [cat]);\n\n  return (\n    <div>\n      <div className=\"container\" dir=\"rtl\">\n        {cat.length !== 0 ? (\n          <div className=\"row\">\n            <div className=\"col-sm-12 logo\">\n              <img src=\"logo.png\" alt=\"logo\" className=\"logo\" />\n            </div>\n\n            {/* ---------- CATEGORIES */}\n            <div className=\"col-sm-12\" dir=\"rtl\">\n              <select\n                className=\"custom-select custom-select-lg mb-3\"\n                id=\"cate\"\n                value={selectCat}\n                onChange={handleselectCat}\n              >\n                <option value={1}> Salact option</option>\n                {[...myset].map((cat, i) => (\n                  <option value={cat} key={i}>\n                    {cat}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {/* ---------- SUB CATEGORIES */}\n\n            <div className=\"col-sm-12 text-right\" dir=\"rtl\">\n              <select\n                className=\"custom-select custom-select-lg mb-3\"\n                value={selectsubcat}\n                onChange={handleselectsubcat}\n              >\n                <option value={1}> select option</option>\n                {subcat.map((cat, i) => {\n                  return (\n                    <option value={cat} key={i}>\n                      {cat}\n                    </option>\n                  );\n                })}\n              </select>\n\n              {/* ---------- TEXT  */}\n\n              <label htmlFor=\"exampleFormControlTextarea1\"> نص الحدمة</label>\n              <textarea\n                className=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                rows=\"3\"\n              ></textarea>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary btn-lg mt-2\"\n                id=\"copy\"\n              >\n                copy to clipboard\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"container loading\">\n              <img src=\"./annimated.svg\" alt=\"loading img\" />\n            </div>\n            <div className=\"container loading-text\"> Loading ...</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}